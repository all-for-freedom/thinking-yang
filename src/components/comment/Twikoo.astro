---
import { commentConfig } from "@/config";

interface Props {
	path: string;
}

const config = {
	...commentConfig.twikoo,
	el: "#tcomment",
	path: Astro.props.path,
};
---

<div id="tcomment"></div>
<script is:inline src="https://cdn.jsdelivr.net/npm/twikoo@1.6.39/dist/twikoo.all.min.js"></script>
<script is:inline define:vars={{ config }}>
  // 初始化 Twikoo
  function initTwikoo() {
    if (typeof twikoo !== 'undefined') {
      const commentEl = document.getElementById('tcomment');
      if (commentEl) {
        commentEl.innerHTML = '';
        
        console.log('[Twikoo] 初始化配置:', config);
        
        twikoo.init(config).then(() => {
          console.log('[Twikoo] 初始化完成');
        }).catch((error) => {
          console.error('[Twikoo] 初始化失败:', error);
        });
      }
    } else {
      // 如果 Twikoo 未加载，稍后重试
      setTimeout(initTwikoo, 500);
    }
  }
  
  // 页面加载时初始化
  document.addEventListener('DOMContentLoaded', initTwikoo);
  
  // Swup 页面切换后重新初始化
  if (window.swup && window.swup.hooks) {
    window.swup.hooks.on('content:replace', function() {
      setTimeout(initTwikoo, 200);
    });
  } else {
    document.addEventListener('swup:enable', function() {
      if (window.swup && window.swup.hooks) {
        window.swup.hooks.on('content:replace', function() {
          setTimeout(initTwikoo, 200);
        });
      }
    });
  }
  
  // 自定义事件监听
  document.addEventListener('mizuki:page:loaded', function() {
    const commentEl = document.getElementById('tcomment');
    if (commentEl) {
      console.log('[Twikoo] 通过自定义事件重新初始化');
      initTwikoo();
    }
  });
</script>